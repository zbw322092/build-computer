// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=r0load, b=r1load, c=r2load, d=r3load, e=r4load, f=r5load, g=r6load, h=r7load);
    Register(in=in, load=r0load, out=out0);
    Register(in=in, load=r1load, out=out1);
    Register(in=in, load=r2load, out=out2);
    Register(in=in, load=r3load, out=out3);
    Register(in=in, load=r4load, out=out4);
    Register(in=in, load=r5load, out=out5);
    Register(in=in, load=r6load, out=out6);
    Register(in=in, load=r7load, out=out7);
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}